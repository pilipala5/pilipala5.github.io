[{"content":"1. 引言 Lilian Weng\u0026rsquo;s Log: https://lilianweng.github.io/\n​\t在学习的过程中，偶然看见了Lilian Weng的个人博客网站，感觉像她那样记录自己的思想很有意义，因此学习她搭建了这个网页。希望以后也能分享自己的一些学习记录与思考。\n​\t在搭建这个网页的时候也走了一些弯路，因此，特意写一篇博客在这里，记录一下我搭建这个网页的过程，供大家参考。\n2. 页面构建 2.1 Hugo下载 ​\t首先整个页面是基于Hugo搭建的，因此我们需要在电脑上下载Hugo。我的电脑是windows系统，直接在网上找到对应版本下载即可。下载之后解压文件夹，结构如下：\n​\t接下来，运行 hugo.exe 文件，运行后关闭，在该文件根目录，打开终端，输入\nhugo version ​\t输出版本号，则说明hugo安装成功，\n​\t然后将 hugo.exe 文件夹所在根目录加入”系统环境变量-系统变量-Path“中。添加完成后，随意在其他目录下打开终端，运行 hugo version，若能显示版本号，则说明环境变量配置成功。\n2.2 构建页面 如下内容参考官方链接（20250225）： https://github.com/adityatelange/hugo-PaperMod/wiki/Installation\n​\t然后找到你想要构建页面的目录，打开终端，输入如下命令：\nhugo new site MyFreshWebsite --format yaml # replace MyFreshWebsite with name of your website ​\t这里 MyFreshWebsite 会生成一个名叫 MyFreshWebsite 的文件夹，然后不要关闭终端，接着输入（这里的MyFreshWebsite 可以自定义，但是后面需要对应）：\ncd MyFreshWebsite 2.3 主题安装 ​\t这样我们就成功的构建了一个网页。接下来我们需要安装 PaperMod 主题，这里我们按照官方页面上推荐的方式。这里需要提前安装好 Git。没有安装的同学，我给大家找了一个教程，大家参考着自己安装（Git安装教程）。然后我们在 MyFreshWebsite 目录下，输入如下命令：\ngit init git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) git submodule update --remote --merge ​\t这样我们就成功下载了 PaperMod 主题了。MyFreshWebsite 的文件结构应当如下，这个图片我给的是我最终的版本，有些许不一样应该不重要，重要是关于hugo.yaml文件：\n2.4 页面配置 ​\t打开我们的 hugo.yaml 文件，里面有些配置我们需要修改，这里我实际也不是很懂，但是先给大家一个简单案例吧，这些功能也是大家基本上都会用到的，所以这一段可以先无脑copy😀。\nbaseURL: \u0026#34;https://pilipala5.github.io/\u0026#34; languageCode: \u0026#34;en-us\u0026#34; title: \u0026#34;YH\u0026#39;s Log\u0026#34; theme: [\u0026#34;PaperMod\u0026#34;] menu: main: - identifier: Posts name: Posts url: /posts/ weight: 10 - identifier: Tags name: Tags url: /tags/ weight: 20 - identifier: Search name: Search url: /search/ weight: 30 - identifier: Archives name: Archives url: /archives/ weight: 40 params: assets: css: - \u0026#34;css/custom.css\u0026#34; title: \u0026#34;pilipala5\u0026#39;s Blog\u0026#34; description: \u0026#34;My personal blog using Hugo and PaperMod\u0026#34; author: \u0026#34;pilipala5\u0026#34; profileMode: enabled: false showTags: true showToc: true showReadingTime: true showPostNavLinks: true homeInfoParams: Title: \u0026#34;🐕Welcome to Yuhan\u0026#39;s Log\u0026#34; Content: | Hi, I am a student from the School of Remote Sensing and Information Engineering, Wuhan University.I will share some of my learning experiences and thoughts here. Hope you like it!😊 socialIcons: - name: github url: \u0026#34;https://github.com/pilipala5\u0026#34; - name: csdn url: \u0026#34;https://blog.csdn.net/m0_62716099?spm=1000.2115.3001.5343\u0026#34; defaultTheme: \u0026#34;dark\u0026#34; mainSections: - posts fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 # limit: 10 # refer: https://www.fusejs.io/api/methods.html#search keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] outputs: home: - HTML - RSS - JSON # necessary for search ​\t提醒几个重要的点：\nbaseurl 是部署后你的网页所在的链接，需要把 \u0026ldquo;pilipala5\u0026rdquo; 修改成自己的Github用户名 menu main下的这四个对应的是四个功能：博客、标签、搜索、归档。这里还需要在其他地方配置一些文件，但是这个 Yaml 文件就是最终版，不需要再进行任何的修改。 homeInfoParams 下对应的是进入页面时的欢迎介绍，随意修改。 socialIcons 下对应的是一些其他的链接，随意修改 2.4.1 发表博客 ​\t现在我们需要发表第一个博客，这样才能检验其他功能是否正确。在 MyFreshWebsite 下打开终端，输入如下命令：\nhugo new posts/my-first-blog.md ​\t接下来我们就能发现生成了 content/posts/my-first-blog.md 文件，这个文件就是我们的博客。在博客的最开始，加入如下源代码：\n--- title: \u0026#34;Hugo+PaperMod+Github创建自己的博客网站\u0026#34;\t# 标题 date: 2025-02-25T00:00:00+00:00\t# 只需要修改前面的日期 draft: false\t# 是否为草稿，是草稿在hugo server时不会显示 toc: true\t# 是否显示大纲 tags: [\u0026#34;Odds and Ends\u0026#34;] # 用于显示标签 --- ​\t然后发布自己的博客内容。这里面 tags 就是与 Yaml 文件中的 /tags/ 页面对应的。然后在 MyFreshWebsite 下打开终端，本地运行服务，输入如下命令：\nhugo server ​\t本地部署成功后会显示一个链接，打开链接就是自己的页面，若能在 Posts 导航栏以及首页看见自己的博客，则发布成功。\n2.4.2 归档页面 ​\t归档页面对应的是 Yaml 文件中的 Archives部分，这里只需要在 content/ 下创建一个 archives.md文档即可，在文档中插入如下内容：\n--- title: \u0026#34;Archives\u0026#34; layout: \u0026#34;archives\u0026#34; url: \u0026#34;/archives/\u0026#34; summary: archives --- 2.4.3 搜索功能 ​\t搜索功能同理，在 content/ 下创建一个 search.md文档,文档中插入如下内容：\n--- title: \u0026#34;Search\u0026#34; # in any language you want layout: \u0026#34;search\u0026#34; # necessary for search # url: \u0026#34;/archive\u0026#34; # description: \u0026#34;Description for Search\u0026#34; summary: \u0026#34;search\u0026#34; placeholder: \u0026#34;placeholder text in search input box\u0026#34; --- ​\t这样，我们就成功构建了我们的页面了。\n​\t最后在 MyFreshWebsite 下打开终端，输入命令行（我不确定是否必须）构建静态页面：\nhugo --minify 3. 页面推送 官方教程： https://gohugo.io/hosting-and-deployment/hosting-on-github/\n​\t接下来，我们就要利用 Github.io 推送我们的页面了。首先我们需要新建一个Github仓库，命名为 \u0026ldquo;用户名.github.io\u0026quot;。然后链接仓库与本地文件链接。我是这么做的，我不是很懂 Git，仅参考。\ngit branch -M main git remote add origin https://github.com/pilipala5/pilipala5.github.io.git ​\t查看Github本地仓库，到 Settings-Pages 页面中，将 Build and deployment 中 Source 修改为 Github Actions。\n​\t然后 .github/ 下创建一个 workflows 文件夹, 在 workflows下创建hugo.yaml文件。.github/workflows/hugo.yaml 文件内容如下：\n# Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: - main # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \u0026#34;pages\u0026#34; cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.141.0 steps: - name: Install Hugo CLI run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026amp;\u0026amp; sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Install Dart Sass run: sudo snap install dart-sass - name: Checkout uses: actions/checkout@v4 with: submodules: recursive fetch-depth: 0 - name: Setup Pages id: pages uses: actions/configure-pages@v5 - name: Install Node.js dependencies run: \u0026#34;[[ -f package-lock.json || -f npm-shrinkwrap.json ]] \u0026amp;\u0026amp; npm ci || true\u0026#34; - name: Build with Hugo env: HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache HUGO_ENVIRONMENT: production TZ: America/Los_Angeles run: | hugo \\ --gc \\ --minify \\ --baseURL \u0026#34;${{ steps.pages.outputs.base_url }}/\u0026#34; - name: Upload artifact uses: actions/upload-pages-artifact@v3 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v4 ​\t然后推送到仓库：\ngit add -A git commit -m \u0026#34;Create hugo.yaml\u0026#34; git push ​\t在 Github 仓库主页查看 Actions，发现成功构建，即可进入 用户名.github.io 网页查看自己的个人博客了✌️！\n","permalink":"http://localhost:1313/posts/hugo+papermod+github%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/","summary":"\u003ch1 id=\"1-引言\"\u003e1. 引言\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003eLilian Weng\u0026rsquo;s Log:  \u003ca href=\"https://lilianweng.github.io/\"\u003ehttps://lilianweng.github.io/\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e​\t在学习的过程中，偶然看见了Lilian Weng的个人博客网站，感觉像她那样记录自己的思想很有意义，因此学习她搭建了这个网页。希望以后也能分享自己的一些学习记录与思考。\u003c/p\u003e\n\u003cp\u003e​\t在搭建这个网页的时候也走了一些弯路，因此，特意写一篇博客在这里，记录一下我搭建这个网页的过程，供大家参考。\u003c/p\u003e\n\u003ch1 id=\"2-页面构建\"\u003e2. 页面构建\u003c/h1\u003e\n\u003ch2 id=\"21-hugo下载\"\u003e2.1 Hugo下载\u003c/h2\u003e\n\u003cp\u003e​\t首先整个页面是基于Hugo搭建的，因此我们需要在电脑上下载Hugo。我的电脑是windows系统，直接在网上找到对应版本下载即可。下载之后解压文件夹，结构如下：\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"文件结构\" loading=\"lazy\" src=\"/images/post1/img1.png\"\u003e\u003c/p\u003e\n\u003cp\u003e​\t接下来，运行 \u003cstrong\u003ehugo.exe\u003c/strong\u003e 文件，运行后关闭，在该文件根目录，打开终端，输入\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehugo version\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e​\t输出版本号，则说明hugo安装成功，\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"文件结构\" loading=\"lazy\" src=\"/images/post1/img2.png\"\u003e\u003c/p\u003e\n\u003cp\u003e​\t然后将 \u003cstrong\u003ehugo.exe\u003c/strong\u003e 文件夹所在根目录加入”\u003cstrong\u003e系统环境变量-系统变量-Path\u003c/strong\u003e“中。添加完成后，随意在其他目录下打开终端，运行 hugo version，若能显示版本号，则说明环境变量配置成功。\u003c/p\u003e\n\u003ch2 id=\"22-构建页面\"\u003e2.2 构建页面\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e如下内容参考官方链接（20250225）： \u003ca href=\"https://github.com/adityatelange/hugo-PaperMod/wiki/Installation\"\u003ehttps://github.com/adityatelange/hugo-PaperMod/wiki/Installation\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e​\t然后找到你想要构建页面的目录，打开终端，输入如下命令：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ehugo new site MyFreshWebsite --format yaml\n# replace MyFreshWebsite with name of your website\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e​\t这里 MyFreshWebsite 会生成一个名叫 MyFreshWebsite 的文件夹，然后不要关闭终端，接着输入（这里的MyFreshWebsite 可以自定义，但是后面需要对应）：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecd MyFreshWebsite \n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"23-主题安装\"\u003e2.3 主题安装\u003c/h2\u003e\n\u003cp\u003e​\t这样我们就成功的构建了一个网页。接下来我们需要安装 PaperMod 主题，这里我们按照官方页面上推荐的方式。这里需要提前安装好 Git。没有安装的同学，我给大家找了一个教程，大家参考着自己安装（\u003ca href=\"https://blog.csdn.net/weixin_42242910/article/details/136297201\"\u003eGit安装教程\u003c/a\u003e）。然后我们在 MyFreshWebsite 目录下，输入如下命令：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit init\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod\ngit submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically)\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit submodule update --remote --merge\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e​\t这样我们就成功下载了 PaperMod 主题了。MyFreshWebsite 的文件结构应当如下，这个图片我给的是我最终的版本，有些许不一样应该不重要，重要是关于hugo.yaml文件：\u003c/p\u003e","title":"Hugo+PaperMod+Github创建自己的博客网站"}]